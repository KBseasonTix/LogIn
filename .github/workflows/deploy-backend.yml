name: Deploy Backend to Production

on:
  push:
    branches: [ main ]
    paths: 
      - 'server/**'
      - 'deployment-config/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Run security audit
        working-directory: ./server
        run: npm audit --audit-level high
      
      - name: Run lint checks
        working-directory: ./server
        run: npx eslint . --ext .js || echo "No eslint config found"
      
      # Add your backend tests here when available
      # - name: Run tests
      #   working-directory: ./server
      #   run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./deployment-config/docker/Dockerfile.backend
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/login-backend:latest
            ${{ secrets.DOCKER_REGISTRY }}/login-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Deploy to production server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /opt/login-app
            docker-compose -f deployment-config/docker/docker-compose.prod.yml pull
            docker-compose -f deployment-config/docker/docker-compose.prod.yml up -d --no-deps login-backend
            docker system prune -f
      
      - name: Health check
        run: |
          sleep 30
          curl -f https://your-domain.com/health || exit 1
      
      - name: Notify deployment success
        if: success()
        run: echo "Backend deployment successful"
      
      - name: Rollback on failure
        if: failure()
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /opt/login-app
            docker-compose -f deployment-config/docker/docker-compose.prod.yml up -d --no-deps login-backend
            echo "Rollback completed"